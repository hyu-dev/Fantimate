<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapepr 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="fanfeedMapper">
	<resultMap id="fanfeedResultSet" type="Feed">
		<id property="fid" column="BID"/>
		<result property="ftype" column="BTYPE"/>
		<result property="fcontent" column="BCONTENT"/>
		<result property="fcreate" column="BCREATE"/>
		<result property="fmodify" column="BMODIFY"/>
		<result property="flike" column="BLIKE"/>
		<result property="fstatus" column="BSTATUS"/>
		<result property="writer" column="ID"/>
		<result property="artiName" column="ARTI_NAME_EN"/>
	</resultMap>
	
	<resultMap type="AttachmentF" id="attResultSet">
		<id property="attCode" column="BPID"/>
		<result property="attRoot" column="BP_PATH"/>
		<result property="attClName" column="BP_OGNAME"/>
		<result property="attSvName" column="BP_CHNAME"/>
		<result property="attStatus" column="AB_STATUS"/>
		<result property="refId" column="BID"/>
	</resultMap>
	
	<resultMap type="Subscribe" id="subscribeResultSet">
		<id property="subCode" column="SUB_CODE"/>
		<result property="uid" column="U_ID"/>
		<result property="unickname" column="U_NICKNAME"/>
		<result property="subStatus" column="SUB_STATUS"/>
		<result property="artiname" column="ARTI_NAME_EN"/>
	</resultMap>
	
	<!-- 유저 프로필 사진 조회 -->
	<resultMap type="Attachment" id="usattResultSet">
		<id property="attCode" column="S_CODE"/>
		<result property="attRoot" column="S_ROOT"/>
		<result property="attClName" column="S_CL_NAME"/>
		<result property="attSvName" column="S_SV_NAME"/>
		<result property="attStatus" column="S_STATUS"/>
		<result property="subCode" column="SUB_CODE"/>
		<result property="refuid" column="U_ID"/>
		<result property="artiNameEn" column="ARTI_NAME_EN"/>	
	</resultMap>
	
	<resultMap type="Reply" id="replyResultSet">
		<id property="rid" column="BRID"/>
		<result property="rcontent" column="BRCONTENT"/>
		<result property="rcreate" column="BRCREATE"/>
		<result property="rstatus" column="BR_STATUS"/>
		<result property="refId" column="BID"/>
		<result property="writer" column="ID"/>
		<result property="refRid" column="BRRID"/>
		<result property="likeCount" column="BRLIKE_COUNT"/> 
		<result property="rrcount" column="BRRPT_COUNT"/>
		<result property="classify" column="CLASSIFY_MEM"/>
	</resultMap>
	<!-- 게시글 신고 조회 -->
	<resultMap type="Report" id="ReportResultSet">
		<id property="rptCode" column="BRPID"/>
		<result property="rptType" column="BRPTYPE"/>
		<result property="rptReason" column="BRPCONTENT"/>
		<result property="rptDate" column="BRPCREATE"/>
		<result property="isReported" column="BRP_STATUS"/>
		<result property="rptId" column="ID"/>
		<result property="refId" column="BID"/>
	</resultMap>
	<!-- 댓글 신고 조회 -->
	<resultMap type="Report" id="ReportResultSet2">
		<id property="rptCode" column="BRRPID"/>
		<result property="rptType" column="BRRPTYPE"/>
		<result property="rptReason" column="BRRPCONTENT"/>
		<result property="rptDate" column="BRRPCREATE"/>
		<result property="isReported" column="BRRP_STATUS"/>
		<result property="rptId" column="ID"/>
		<result property="refId" column="BRID"/>
	</resultMap>
	
	<!-- 게시글 좋아요 누른 유저 리스트 -->
	<resultMap type="Like" id="LikeResultSet">
		<id property="lid" column="BLID"/>
		<result property="id" column="ID"/>
		<result property="refId" column="BID"/>
		<result property="lstatus" column="BL_STATUS"/>
	</resultMap>
	
	<!-- 댓글 좋아요 누른 유저 리스트 -->
	<resultMap type="Like" id="LikeResultSet2">
		<id property="lid" column="BRLID"/>
		<result property="id" column="ID"/>
		<result property="refId" column="BRID"/>
		<result property="lstatus" column="BRL_STATUS"/>
	</resultMap>
	
	
	<resultMap type="Artist" id="ArtistResultSet">
		<id property="artiId" column="ARTI_ID"/>
		<result property="artiName" column="ARTI_ONE_NAME"/>
		<result property="artiNickname" column="NICKNAME"/>
		<result property="artiFacebook" column="FACEBOOK"/>
		<result property="artiInsta" column="INSTAGRAM"/>
		<result property="artiTwitter" column="TWITTER"/>
		<result property="artiDailymsg" column="DAILY_MSG"/>
		<result property="isTeam" column="IS_TEAM"/>
		<result property="agencyId" column="AG_ID"/>
		<result property="artiNameEn" column="ARTI_NAME_EN"/>
	</resultMap>
	
	<resultMap type="Attachment" id="artiattResultSet">
		<id property="attCode" column="ATT_CODE"/>
		<result property="attRoot" column="ATT_ROOT"/>
		<result property="attClName" column="ATT_CL_NAME"/>
		<result property="attSvName" column="ATT_SV_NAME"/>
		<result property="attStatus" column="ATT_STATUS"/>
		<result property="refuid" column="ARTI_ID"/>
	</resultMap>
	
	<resultMap type="MemberCollection" id="artistcollectionResultSet">
		<collection property="artist" resultMap="artiinfoRresultSet"/>
		<collection property="attachment" resultMap="artiattResultSet"/>
	</resultMap>
	
	<!-- 댓글 모든정보 컬렉션 -->
	<resultMap type="ReplyCollection" id="replyCollResultSet">
		<collection property="feedReply" resultMap="replyResultSet"/>
		
		<collection property="subscribe" resultMap="subscribeResultSet"/>
		<collection property="artist" resultMap="ArtistResultSet"/>
		<collection property="artiAttach" resultMap="artiattResultSet"/>
		<collection property="userAttach" resultMap="usattResultSet"/>
	</resultMap>
	
	<!-- 로그인 유저 정보 -->
	<resultMap type="User" id="userResultSet">
		<id property = "id" column="U_ID"/>
		<result property="uaddress" column="U_ADD"/>
		<result property="uemail" column="U_EMAIL"/>
		<result property="ucountry" column="U_COUNTRY"/>
		<result property="areaReg" column="AREA_REGISTER"/>
		<result property="areaCertify" column="AREA_CERTIFY"/>
		<result property="isMembership" column="IS_MEMBERSHIP"/>
		<result property="uProfile" column="U_PROFILE"/>
	</resultMap>
	
	
	<!-- 게시글 등록 -->
	<insert id="insertFeed">
		INSERT
		INTO BOARD
		(
						BID
					,	BTYPE
					,	BCONTENT
					,	BCREATE
					,	BMODIFY
					,	BLIKE
					,	BSTATUS
					,	ID
					,	ARTI_NAME_EN	
		)
		VALUES
		(
					SEQ_BOARD.NEXTVAL
				,	'F'
				,	#{fcontent}
				,	SYSDATE
				,	SYSDATE
				,	DEFAULT
				,	DEFAULT
				,	#{writer}
				,	#{artiName}
		)
	</insert>
	
	<!-- 게시글 사진 등록 -->
	<insert id="insertFeedAtt" parameterType="list">
		INSERT
		INTO ATT_BOARD
		(
				BPID
			,	BID		
			,	BP_OGNAME
			,	BP_CHNAME
			,	AB_STATUS
		)
		SELECT SEQ_ATT_BOARD.NEXTVAL, SEQ_BOARD.CURRVAL, A.*
		FROM
		(
		 <foreach collection="list" item="i" separator="UNION ALL">
			SELECT	
					#{i.attClName} AS BP_OGNAME
		  		, 	#{i.attSvName} AS BP_CHNAME
		  		,	'Y'
		  	FROM  DUAL
		  </foreach>
		) A
	</insert>
	
	<!-- 게시글 조회 -->
	<select id="selectFeedList" parameterType="string" resultMap="fanfeedResultSet">
		SELECT
					BID
				,	BCONTENT
				,	BCREATE
				,	BMODIFY
				,	BLIKE
				,	BSTATUS
				,	ID
				,	BTYPE
				,	ARTI_NAME_EN
				
		
		FROM
					BOARD
		
		WHERE
					BTYPE = 'F'
		AND			BSTATUS = 'Y'
		AND			ARTI_NAME_EN = #{artiName}
		ORDER BY 	BCREATE DESC
	</select>
	
	<!-- 구독 유저 닉네임 조회 -->
	<select id="selectSubList" resultMap="subscribeResultSet">
	SELECT 	
				SUB_CODE	
			,	U_NICKNAME
			,	U_ID
        	,	SUB_STATUS
        	,	ARTI_NAME_EN
	FROM 		ATT_SUBSCRIBE 
	WHERE		ARTI_NAME_EN = #{artiName}
	ORDER BY SUB_CODE
	</select>
	
	<!-- 유저 프로필 사진 조회 -->
	<select id="selectatList" resultMap="usattResultSet">
	 SELECT DISTINCT
						SUB_CODE
					,	S_ROOT
					,	S_CL_NAME
					,	S_SV_NAME
					,	S_STATUS
					,	SUB_CODE
            		,	U_ID
            		,	ARTI_NAME_EN
	FROM
				SUB_PROFILE
	JOIN 		ATT_SUBSCRIBE USING(SUB_CODE)
    WHERE
    			ARTI_NAME_EN = #{artiName}
	</select>

	<!-- 게시글 사진 조회 -->
	<select id="selectptList" resultMap="attResultSet">
	SELECT
				BPID
			,	BP_PATH
			,	BP_OGNAME
			,	BP_CHNAME
			,	AB_STATUS
			,	BID
	FROM
				ATT_BOARD
	ORDER BY 	BPID DESC		
	</select>
	
	<!-- 댓글 등록 -->
	<insert id="insertReply">
		INSERT
		INTO B_REPLY
		(
						BRID
					,	BRCONTENT
					,	BRCREATE
					,	BR_STATUS
					,	BID
					,	ID
					,	BRLIKE_COUNT
					, 	BRRPT_COUNT
					,	CLASSIFY_MEM
		)
		VALUES
		(
					SEQ_B_REPLY.NEXTVAL
				,	#{rcontent}
				,	SYSDATE
				,	DEFAULT
				,	#{refId}
				,	#{writer}
				,	DEFAULT
				,	DEFAULT
				,	#{classify}   
		)
	</insert>
	
	<!-- 댓글 리스트 조회 -->
	<select id="selectReplyList"  resultMap="replyResultSet">
	SELECT
					BRID
				,	BRCONTENT
				,	BRCREATE
				,	BR_STATUS
				,	BID
				,	ID
				,	BRRID
				,	BRLIKE_COUNT
				, 	BRRPT_COUNT
				,	CLASSIFY_MEM
		
	FROM
					B_REPLY
	
	ORDER BY
				BRCREATE DESC				
	</select>
	
	<!-- fid로 게시글 조회 -->
	<select id="selectFeed" parameterType="_int" resultMap="fanfeedResultSet">
	SELECT
					BID
				,	BCONTENT
				,	BCREATE
				,	BMODIFY
				,	BLIKE
				,	BSTATUS
				,	ID
				,	BTYPE
				,	ARTI_NAME_EN
		FROM
					BOARD
		
		WHERE
					BTYPE = 'F'
		AND			BSTATUS = 'Y'
		AND			BID = #{fid}
		
		ORDER BY 	BCREATE DESC
	</select>
	
	<!-- 게시글 수정 -->
	<update id="updateFeed" parameterType="Feed">
	UPDATE
			BOARD
	SET
			BCONTENT = #{fcontent}
		,	BCREATE	= SYSDATE
		,	BMODIFY	= SYSDATE
	WHERE
			BID = #{fid}
	
	</update>
	
	<!-- 게시글 사진 수정 -->
	<insert id="updateFeedAtt">
		<foreach collection="list" item="i" index="index" open="INSERT ALL" close="SELECT * FROM DUAL">
		INTO ATT_BOARD
		(
					BPID
				,	BP_PATH
				,	BP_OGNAME
				,	BP_CHNAME
				,	AB_STATUS
				,	BID		
		)
		VALUES
		(
					#{i.attCode} + SEQ_ATT_BOARD.NEXTVAL
				,	DEFAULT
				,	#{i.attClName}
		  		, 	#{i.attSvName}
		  		,	DEFAULT
		  		,	#{refId}		
		)
		</foreach>
	</insert>
	
	<!-- refId로 게시글 사진 조회 -->
	<select id="selectAttachmentF" parameterType="_int" resultMap="attResultSet">
	SELECT
				BPID
			,	BP_PATH
			,	BP_OGNAME
			,	BP_CHNAME
			,	AB_STATUS
			,	BID
	FROM
				ATT_BOARD
	WHERE 		
				BID = #{refId}
	ORDER BY 	BPID DESC	
	</select>
	
	<!-- 게시글 삭제 활성화 처리 -->
	<update id="deleteFeed" parameterType="_int">
		UPDATE 
		       BOARD
		   SET 
		       BSTATUS = 'N'
		 WHERE 
		       BID = #{fid}
	</update>
	
	<!-- 게시글 신고 -->
	<insert id="insertFeedReport">
		INSERT
		INTO 	B_RPT
		(
				BRPID
			,	BRPTYPE
			,	BRPCONTENT
			,	BRPCREATE
			,	BRP_STATUS
			,	BID
			,	ID
		)
		VALUES
		(
			    SEQ_B_RPT.NEXTVAL
			,	#{rptType} 
			,	#{rptReason}
			,	SYSDATE
			,	DEFAULT
			,	#{refId}
			,	#{rptId}   
		)	
	</insert>
	
	<!-- 댓글 삭제 -->
	<delete id="deleteReply" parameterType="_int">
		DELETE 
		FROM 	B_REPLY
		WHERE 
				BRID = #{rid}
	</delete>
	
	<!-- rid로 댓글 조회 -->
	<select id="selectReply" parameterType="_int" resultMap="replyResultSet">
	SELECT
					BRID
				,	BRCONTENT
				,	BRCREATE
				,	BR_STATUS
				,	BID
				,	ID
				,	BRRID
				,	BRLIKE_COUNT
				, 	BRRPT_COUNT
		
	FROM
					B_REPLY
	WHERE
					BRID = #{rid}
	ORDER BY
				BRCREATE		
	</select>
	
	<!-- 댓글 신고  -->
	<insert id="insertReplyReport">
	INSERT
		INTO 	B_RE_RPT
		(
				BRRPID
			,	BRRPTYPE
			,	BRRPCONTENT
			,	BRRPCREATE
			,	BRRP_STATUS
			,	BRID
			,	ID
		)
		VALUES
		(
			    SEQ_B_RE_RPT.NEXTVAL
			,	#{rptType} 
			,	#{rptReason}
			,	SYSDATE
			,	DEFAULT
			,	#{refId}
			,	#{rptId}   
		)	
	</insert>
	
	<!-- 좋아요 누른 유저 추가 -->
	<!-- <insert id="insertLike">
	INSERT
		INTO	B_LIKE
		(
				BLID
			,	ID
			,	BID
			,	BL_STATUS
		)
		VALUES
		(
				SEQ_B_LIKE.NEXTVAL
			,	#{id}
			,	#{refId}
			,	DEFAULT
		)	
	</insert> -->
	
	<!-- 좋아요 누른 유저 추가될 때 BOARD 테이블 BLIKE 컬럼 업데이트 -->
	<!-- <update id="updateFeedLike" parameterType="Feed">
	UPDATE
			BOARD
	SET
			BLIKE = BLIKE + 1
	WHERE
			BID = #{fid}
	</update> -->
	
	<!-- 쪽지 보내기 -->
	<insert id="insertMessage">
	INSERT
		INTO	MESSAGE
		(
			MESS_NO
		,	MESS_CONTENT
		,	MESS_DATE
		,	MESS_READ
		,	U_ID_SEND
		,	U_ID_RECEIVE
		,	MESS_TITLE
		,	MESS_STATUS
		)
		VALUES
		(
			SEQ_MESSAGE.NEXTVAL
		,	#{messContent}
		,	SYSDATE
		,	DEFAULT
		,	#{messSendId}
		,	#{messRecId}
		,	#{messTitle}
		,	DEFAULT
		)
	</insert>
	
	<!-- 친구 신청 -->
	<insert id="insertFriend">
	INSERT
		INTO	FRIEND
		(
				FR_CODE
			,	U_ID_SEND
			,	U_ID_RECEIVE
			,	FR_STATUS
		)
		VALUES
		(
				SEQ_FRIEND.NEXTVAL
			,	#{frSend}
			,	#{frRecId}
			,	DEFAULT
		)
	</insert>
	
	<!-- 좋아요 누른 유저 리스트  -->
	<select id="selectLikeList" resultMap="LikeResultSet">
	SELECT
				BLID
			,	ID
			,	BID
			,	BL_STATUS
	FROM
				B_LIKE
	WHERE
				BL_STATUS = 'Y'
	
	</select>
	
	<!-- 댓글 좋아요 누른 유저 리스트 -->
	<select id="selectRLikeList" resultMap="LikeResultSet2">
	SELECT
				BRLID
			,	ID
			,	BRID
			,	BRL_STATUS
	FROM
				B_RE_LIKE
	WHERE
				BRL_STATUS = 'Y'
	
	</select>
	
	
	<!-- fid로 게시글 정보 조회 -->
	<select id="selectFeedInfo" parameterType="_int" resultMap="fanfeedResultSet">
	SELECT
				BID
			,	BTYPE
			,	BCONTENT
			,	BCREATE
			,	BMODIFY
			,	BLIKE
			,	BSTATUS
			,	ID
	FROM
				BOARD
	WHERE
				BID = #{fid}
			
	</select>
	
	<!-- 친구 신청 시 알람 -->
	<insert id="insertfriendAlarm">
	INSERT 
		INTO	ALARM
		(
				AL_MADE_CODE
			,	AL_CONTENT
			,	AL_TIME
			,	AL_STATUS
			,	AL_CODE
			,	ID
			
		)
		VALUES
		(
				SEQ_ALARM.NEXTVAL
			,	#{alContent}
			,	SYSDATE
			,	DEFAULT
			,	'16'
			,	#{id}
		)
	</insert>
	
	<!-- 게시글, 댓글 신고 시 관리자에게 알람 -->
	<insert id="insertReportAlarm">
	INSERT
		INTO	ALARM
		(
				AL_MADE_CODE
			,	AL_CONTENT
			,	AL_TIME
			,	AL_STATUS
			,	AL_CODE
			,	ID
		)
		VALUES
		(
				SEQ_ALARM.NEXTVAL
			,	#{alContent}
			,	SYSDATE
			,	DEFAULT
			,	'7'
			,	'admin'
		)
	</insert>
	
	<!-- 댓글 신고 시 관리자에게 알람 -->	
		<insert id="insertReportReplyAlarm">
	INSERT
		INTO	ALARM
		(
				AL_MADE_CODE
			,	AL_CONTENT
			,	AL_TIME
			,	AL_STATUS
			,	AL_CODE
			,	ID
		)
		VALUES
		(
				SEQ_ALARM.NEXTVAL
			,	#{alContent}
			,	SYSDATE
			,	DEFAULT
			,	'6'
			,	'admin'
		)
	</insert>
	
	<!-- 아티스트 리스트 -->
	<select id="selectArtistList" resultMap="ArtistResultSet">
	SELECT
				ARTI_ID
			,	ARTI_ONE_NAME
			,	NICKNAME
			,	FACEBOOK
			,	INSTAGRAM
			,	TWITTER
			,	DAILY_MSG
			,	IS_TEAM
			,	ID
			,	ARTI_NAME_EN
	FROM		
				ART_PERSON
	</select>
	
	<!-- 게시글 당 사진 갯수 조회 -->
	<!-- <select id="selectptListCount" resultType="_int">
	SELECT 	COUNT(BP_CHNAME)
	FROM 	ATT_BOARD
	WHERE 	BID = #{refId}
	</select> -->
	
	<!-- 좋아요 취소 -->
	<!-- <delete id="deleteLike" parameterType="_int">
		DELETE 
		FROM 	B_LIKE
		WHERE 
				BID = #{refId}
	</delete> -->
	
	<!-- 좋아요 취소시 좋아요 수 업데이트 -->
	<!-- <update id="updateFeedLikeCancel" parameterType="Feed">
	UPDATE
			BOARD
	SET
			BLIKE = #{flike} - 1
	WHERE
			BID = #{fid}
	</update> -->
	
	<!-- 좋아요 눌렀을 시 화면단에 좋아요 갯수 증가 시키기 -->
	<select id="selectFeedLike" resultType="_int">
	SELECT
			BLIKE
	FROM
			BOARD
	WHERE
			BID = #{fid}
	
	</select>
	
	<!-- 아티스트 프로필 사진 조회 -->
	<select id="selectapList" resultMap="artiattResultSet">
	
	SELECT
					ATT_CODE
				,	ATT_ROOT
				,	ATT_CL_NAME
				,	ATT_SV_NAME
				,	ATT_STATUS
				,	ARTI_ID
	FROM
					ART_PIC		
	</select>
	
	<!-- 댓글 모든 정보 -->
	<select id="selectReplyAllList" parameterType="string" resultMap="replyCollResultSet">
    SELECT
           A.BRID
         , BRCONTENT
         , BRCREATE
         , BID
         , A.ID
         , BRRID
         , BRLIKE_COUNT
         , BRRPT_COUNT
         , ARTI_ONE_NAME
         , NICKNAME
         , FACEBOOK
         , INSTAGRAM
         , TWITTER
         , DAILY_MSG
         , IS_TEAM
         , F.ARTI_NAME_EN
         , U_NICKNAME
         , ATT_SV_NAME
         , UP_SV_NAME
         , BRLID
         , G.BRID
	  FROM
	       B_REPLY A
 LEFT JOIN
           ART_PERSON B ON(A.ID = B.ARTI_ID)
 LEFT JOIN
           ATT_SUBSCRIBE C ON(A.ID = C.U_ID)
 LEFT JOIN
           ART_PIC D ON(B.ARTI_ID = D.ARTI_ID)
 LEFT JOIN
           USER_PROFILE E ON(C.U_ID = E.U_ID)
 LEFT JOIN
           BOARD F USING(BID)
 LEFT JOIN
           B_RE_LIKE G ON(A.BRID = G.BRID)
	 WHERE
           F.ARTI_NAME_EN = #{artiName}
       AND
          (
           D.ATT_STATUS = 'Y'
        OR
           E.UP_STATUS = 'Y'
          )
       AND
          (
           B.ARTI_NAME_EN = #{artiName}
        OR
           C.ARTI_NAME_EN = #{artiName}
          )
       AND
           BR_STATUS = 'Y'
       AND
           BSTATUS = 'Y'
  ORDER BY
           BRCREATE DESC
	</select>	
	
	
	<!-- 좋아요 수정 ***************************** -->	
	
	<!-- 좋아요 누른 유저 추가 -->
	<insert id="insertLike2">
	INSERT
		INTO	B_LIKE
		(
				BLID
			,	ID
			,	BID
			,	BL_STATUS
		)
		VALUES
		(
				SEQ_B_LIKE.NEXTVAL
			,	#{id}
			,	#{refId}
			,	DEFAULT
		)	
	</insert>
	
	<!-- 좋아요 누른 유저 추가될 때 BOARD 테이블 BLIKE 컬럼 업데이트 -->
	<update id="updateFeedLike2" parameterType="_int">
	UPDATE
			BOARD
	SET
			BLIKE = BLIKE + 1
	WHERE
			BID = #{fid}
	</update>
	
	<!-- 좋아요 취소 -->
	<delete id="deleteLike2" parameterType="Like">
		DELETE 
		FROM 	B_LIKE
		WHERE 
				BID = #{refId}
		AND 
			   ID = #{id}
	</delete>
	
	<!-- 좋아요 취소시 좋아요 수 업데이트 -->
	<update id="updateFeedLikeCancel2" parameterType="_int">
	UPDATE
			BOARD
	SET
			BLIKE = BLIKE - 1
	WHERE
			BID = #{fid}
	</update>
	
	<!-- 좋아요 갯수 select -->
	<select id="selectLike2" resultType="_int">
	SELECT
          BLIKE
    FROM
          BOARD
    WHERE
         BID = #{fid}
	</select>
	
	<!-- 친구 중복신청 막기 -->
	<select id="isAlreadyAppliedFriend" parameterType="hashMap" resultType="_int">
		SELECT
		        COUNT(*)
		  FROM
		        FRIEND
		 WHERE
		        U_ID_SEND = #{frSend}
		   AND
		        U_ID_RECEIVE = #{frRecId}
	</select>
	
	<!-- 댓글 작성 시 게시글 작성자에게 알람 -->
	<insert id="ReplyAlarm">
	INSERT
		INTO	ALARM
		(
				AL_MADE_CODE
			,	AL_CONTENT
			,	AL_TIME
			,	AL_STATUS
			,	AL_CODE
			,	ID
			,	REF_ID
		)
		VALUES
		(
				SEQ_ALARM.NEXTVAL
			,	#{alContent}
			,	SYSDATE
			,	DEFAULT
			,	'3'
			,	#{id}
			,	#{ref_id}
		)
	</insert>
	
	<!-- 댓글 좋아요 누른 유저 추가 -->
	<insert id="insertLike3">
	INSERT
		INTO	B_RE_LIKE
		(
				BRLID
			,	ID
			,	BRID
			,	BRL_STATUS
		)
		VALUES
		(
				SEQ_B_RE_LIKE.NEXTVAL
			,	#{id}
			,	#{refId}
			,	DEFAULT
		)	
	</insert>
	
	<!-- 댓글 좋아요 누른 유저 추가될 때 댓글 테이블 좋아요 갯수 업데이트 -->
	<update id="updateFeedLike3" parameterType="_int">
	UPDATE
			B_REPLY
	SET
			BRLIKE_COUNT = BRLIKE_COUNT + 1
	WHERE
			BRID = #{rid}
	</update>
	
	<!-- 댓글 좋아요 취소 -->
	<delete id="deleteLike3">
		DELETE 
		FROM 	B_RE_LIKE
		WHERE 
				BRID = #{refId}
		AND 
			   ID = #{id}
	</delete>
	
	<!-- 댓글좋아요 취소시 좋아요 수 업데이트 -->
	<update id="updateFeedLikeCancel3" parameterType="_int">
	UPDATE
			B_REPLY
	SET
			BRLIKE_COUNT = BRLIKE_COUNT - 1
	WHERE
			BRID = #{rid}
	</update>
	
	<!-- 댓글 좋아요 갯수 select -->
	<select id="selectLike3" resultType="_int">
	SELECT
          BRLIKE_COUNT
    FROM
          B_REPLY
    WHERE
         BRID = #{rid}
	</select>
	
	<!-- 일반 유저 정보 -->
	<select id= "selectUser" parameterType="string" resultMap="userResultSet">
	SELECT 		
    		    IS_MEMBERSHIP
    FROM 		USER_
    WHERE 		U_ID = #{id}
	</select>
</mapper>