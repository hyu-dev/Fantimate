<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapepr 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mainMapper">

	<!-- 아티스트 정보 -->
	<resultMap type="ArtistGroup" id="artistgroupResultSet">
		<id property = "artNameEn" column="ARTI_NAME_EN"/>
		<result property="artNameKr" column="ARTI_NAME_KR"/>
		<result property="agId" column="AG_ID"/>
	</resultMap>
	<!-- 사진 첨부 (메인사진)-->
	<resultMap type="Attachment" id="attResultSet">
		<id property="attCode" column="ATT_CODE"/>
		<result property="attRoot" column="ATT_ROOT"/>
		<result property="attClName" column="ATT_CL_NAME"/>
		<result property="attSvName" column="ATT_SV_NAME"/>
		<result property="attStatus" column="ATT_STATUS"/>
	</resultMap>
	<!-- 사진 첨부 (친구프로필)-->
	<resultMap type="Attachment" id="frAttResultSet">
		<id property="attCode" column="UP_CODE"/>
		<result property="attRoot" column="UP_ROOT"/>
		<result property="attClName" column="UP_CL_NAME"/>
		<result property="attSvName" column="UP_SV_NAME"/>
		<result property="attStatus" column="UP_STATUS"/>
		<result property="id" column="U_ID"/>
	</resultMap>
	<!-- 관심아티스트 -->
	<resultMap type="FavoriteArtist" id="favArtistResultSet">
		<id property = "favCode" column="FAV_CODE"/>
		<result property="id" column="U_ID"/>
		<result property="artiName" column="ARTI_NAME_EN"/>
	</resultMap> 
	<!-- 구독 -->
	<resultMap type="SubscribeArtist" id="subArtistResultSet">
		<id property = "subCode" column="SUB_CODE"/>
		<result property="id" column="U_ID"/>
		<result property="nickname" column="U_NICKNAME"/>
		<result property="subStatus" column="SUB_STATUS"/>
		<result property="artNameEn" column="ARTI_NAME_EN"/>
	</resultMap> 
	<!-- 알람 -->
	<resultMap type="Alarm" id="alarmResultSet">
		<id property = "alCode" column="AL_MADE_CODE"/>
		<result property="alContent" column="AL_CONTENT"/>
		<result property="alTime" column="AL_TIME"/>
		<result property="alStatus" column="AL_STATUS"/>
		<result property="refAlCode" column="AL_CODE"/>
		<result property="id" column="ID"/>
		<result property="ref_id" column="REF_ID"/>
	</resultMap> 
	<!-- 쪽지 -->
	<resultMap type="Message" id="messageResultSet">
		<id property = "messCode" column="MESS_NO"/>
		<result property="messContent" column="MESS_CONTENT"/>
		<result property="messDate" column="MESS_DATE"/>
		<result property="messRead" column="MESS_READ"/>
		<result property="messSendId" column="U_ID_SEND"/>
		<result property="id" column="U_ID_RECEIVE"/>
		<result property="messTitle" column="MESS_TITLE"/>
		<result property="messStatus" column="MESS_STATUS"/>
	</resultMap> 
	<!-- 쪽지 신고 -->
	<resultMap type="Report" id="reportResultSet">
		<id property = "rptCode" column="RPT_CODE"/>
		<result property="rptType" column="RPT_TYPE"/>
		<result property="rptReason" column="RPT_REASON"/>
		<result property="rptDate" column="RPT_DATE"/>
		<result property="isReported" column="IS_REPORTED"/>
		<result property="id" column="U_ID"/>
		<result property="refId" column="MESS_NO"/>
	</resultMap> 
	<!-- 친구 -->
	<resultMap type="Friend" id="friendResultSet">
		<id property = "frCode" column="FR_CODE"/>
		<result property="frSend" column="U_ID_SEND"/>
		<result property="frRecId" column="U_ID_RECEIVE"/>
		<result property="frStatus" column="FR_STATUS"/>
	</resultMap> 
	
	<!-- collection -->
	<resultMap type="MainCollection" id="mainCollResultSet">
		<collection property="artG" resultMap="artistgroupResultSet" />
		<collection property="att"  resultMap="attResultSet" />
		<collection property="afv"  resultMap="favArtistResultSet" />
	</resultMap>
	<resultMap type="FriendCollection" id="friendCollResultSet">
		<collection property="fr" resultMap="friendResultSet" />
		<collection property="att"  resultMap="frAttResultSet" />
		<collection property="msg"  resultMap="messageResultSet" />
	</resultMap>
	

	
	
	<!-- 관심아티스트 제외한 아티스트 리스트 select -->
	<select id="selectArtistList" resultMap="mainCollResultSet">
		SELECT
		        AM.ARTI_NAME_EN
		      , AM.ARTI_NAME_KR
		      , AM.AG_ID
		      , MP.ATT_CODE
		      , MP.ATT_ROOT
		      , MP.ATT_CL_NAME
		      , MP.ATT_SV_NAME
		      , MP.ATT_STATUS
		      , MP.ARTI_NAME_EN
		FROM 
		     ART_MAIN AM
		JOIN
		     ART_MAIN_PIC MP ON (AM.ARTI_NAME_EN = MP.ARTI_NAME_EN)
		WHERE
		     ATT_STATUS = 'Y'
		AND 
		     NOT EXISTS (SELECT 1 
		                   FROM
		                        ART_FAV AF
		                  WHERE
		                        AF.ARTI_NAME_EN = AM.ARTI_NAME_EN
		                    AND
		                        U_ID = #{loginUser})
	</select>
	
	<!-- 관심아티스트 리스트만 select -->
	<select id="selectArtistFavList" resultMap="mainCollResultSet">
		SELECT
		        FAV_CODE
		      , U_ID
		      , ARTI_NAME_EN 
		      , ATT_CODE
		      , ATT_ROOT
		      , ATT_CL_NAME
		      , ATT_SV_NAME
		      , ATT_STATUS
		FROM 
		     ART_FAV
		JOIN 
		     ART_MAIN_PIC USING (ARTI_NAME_EN)
		WHERE
		     U_ID = #{loginUser}
		AND
			ATT_STATUS = 'Y'
	</select>
	
	<!-- 전체 리스트 -->
	<select id="selectArtistWholeList" resultMap="mainCollResultSet">
		SELECT
		        ARTI_NAME_EN
		      , ARTI_NAME_KR
		      , AG_ID
		      , ATT_CODE
		      , ATT_ROOT
		      , ATT_CL_NAME
		      , ATT_SV_NAME
		      , ATT_STATUS
		FROM 
		     ART_MAIN 
		JOIN
		     ART_MAIN_PIC USING (ARTI_NAME_EN)
		WHERE
		     ATT_STATUS = 'Y'
	</select>
	
	<!-- 닉네임 중복 카운트 -->
	<select id="selectNickName" resultType="_int" parameterType="String">
	  SELECT
      		  COUNT(*)
		FROM
		      ATT_SUBSCRIBE
		WHERE 
		     U_NICKNAME = #{nickname}
	</select>
	
	<!-- 구독 아티스트 테이블 insert -->
	<insert id="insertSub" parameterType="FavoriteArtist">
		INSERT
		INTO ATT_SUBSCRIBE
		(
			SUB_CODE
		  , U_ID
		  , U_NICKNAME
		  , SUB_STATUS
		  , ARTI_NAME_EN
		)
		VALUES
		(
		    SEQ_SUBSCRIBE.NEXTVAL
		  , #{id}
		  , #{nickname}
		  , DEFAULT
		  , #{artNameEn}
		) 
	</insert>
	
	<!-- 구독 프로필 테이블 insert -->
	<insert id="insertAttS" parameterType="Attachment">
		INSERT
		INTO SUB_PROFILE
		(
			S_CODE
		  , S_CL_NAME
		  , S_SV_NAME
		  , S_STATUS
		  , SUB_CODE
		)
		VALUES
		(
		    SEQ_SUB_PRO.NEXTVAL
		  , #{attClName}
		  , #{attSvName}
		  , DEFAULT
		  , SEQ_SUBSCRIBE.CURRVAL
		) 
	</insert>
	
	<!-- 구독 여부 확인 -->
	<select id="selectSubCount" resultType="_int" parameterType="SubscribeArtist">
	  SELECT
		      COUNT(*)
		FROM
		      ATT_SUBSCRIBE
		WHERE 
		     U_ID = #{id}
		AND
		     ARTI_NAME_EN = #{artNameEn}
		AND
			 SUB_STATUS = 'N'
	</select>
	
	<!-- 검색 결과 select -->
	<select id="selectArtistSearchList" resultMap="mainCollResultSet">
		SELECT
		        ARTI_NAME_EN
		      , ARTI_NAME_KR
		      , ATT_SV_NAME
		      , ATT_STATUS
		FROM 
		     ART_MAIN 
		JOIN
		     ART_MAIN_PIC USING (ARTI_NAME_EN)
		WHERE
		     ATT_STATUS = 'Y'
		AND
		    upper(ARTI_NAME_EN) LIKE '%' || upper(#{artistName}) || '%'
		OR
			ARTI_NAME_KR LIKE '%' || #{artistName} || '%'
	</select>
	
	<!-- 알람 select -->
	<select id="selectAlarmList" resultMap="alarmResultSet">
		SELECT 
		        AL_MADE_CODE
		      , AL_CONTENT
		      , AL_TIME
		      , AL_STATUS
		      , AL_CODE
		      , ID
		      , REF_ID
		FROM 
		      ALARM
		WHERE
		      ID = #{id}
		AND
			  AL_STATUS = 'Y'
        AND
              to_date(AL_TIME,'YY/MM/DD') = #{alTime}
		ORDER BY 
			  AL_TIME DESC
	</select>
	
	<!-- 알람 갯수 count -->
	<select id="selectAlarmCount" resultType="_int" parameterType="Alarm">
		SELECT 
		      COUNT(*)
		FROM 
		      ALARM
		WHERE
		      ID = #{id}
		AND
			  AL_STATUS = 'Y'
        AND
              to_date(AL_TIME,'YY/MM/DD') = #{alTime}
	</select>
	
	<!-- 쪽지 전체 리스트 -->
	<select id="selectMessageWholeList" resultMap="messageResultSet">
		SELECT
		       MESS_NO
		     , MESS_CONTENT
		     , MESS_DATE
		     , MESS_READ
		     , U_ID_SEND
		     , U_ID_RECEIVE
		     , MESS_TITLE
		     , MESS_STATUS
		FROM 
		      MESSAGE
		WHERE
		     U_ID_RECEIVE = #{id}
		AND
			 MESS_STATUS = 'Y'
		ORDER BY MESS_DATE DESC
	</select>
	
	<!-- 쪽지 날짜만 셀렉 -->
	<select id="selectMessageDate" resultMap="messageResultSet">
		SELECT
		      DISTINCT to_date(MESS_DATE,'YY/MM/DD') AS MESS_DATE
		FROM 
		      MESSAGE
		WHERE
		     U_ID_RECEIVE = #{id}
		AND
			 MESS_STATUS = 'Y'
		ORDER BY MESS_DATE DESC
	</select>
	
	<!-- 쪽지 읽음으로 업데이트 -->
	<update id="updateRead" parameterType="_int">
		UPDATE
			  MESSAGE
		   SET
		   	  MESS_READ = 'Y'
		WHERE
			  MESS_NO = #{messCode}
	</update>
	
	<insert id="insertMessage" parameterType="Message">
		INSERT
		INTO MESSAGE
		(
		   MESS_NO
	     , MESS_CONTENT
	     , MESS_DATE
	     , MESS_READ
	     , U_ID_SEND
	     , U_ID_RECEIVE
	     , MESS_TITLE
	     , MESS_STATUS
		)
		VALUES
		(
		   SEQ_MESSAGE.NEXTVAL
		 , #{messContent}
		 , SYSDATE
		 , DEFAULT
		 , #{messSendId} 
		 , #{id}
		 , #{messTitle}
		 , DEFAULT
		)
	
	</insert>
	
	<insert id="insertReportm" parameterType="Report">
		INSERT
		INTO RPT_MESSAGE
		(
		    RPT_CODE
		  ,	RPT_TYPE
		  ,	RPT_REASON
		  ,	RPT_DATE
		  ,	IS_REPORTED
		  ,	U_ID
		  ,	MESS_NO	
		)
		VALUES
		(
		    SEQ_MESS_RPT.NEXTVAL
		  , #{rptType}
		  , #{rptReason}
		  , SYSDATE
		  , DEFAULT
		  , #{id}
		  , #{refId}
		)
	
	</insert>
	
	<update id="updateMessage" parameterType="_int">
		UPDATE
			  MESSAGE
		   SET
		   	  MESS_STATUS = 'N'
		WHERE
			  MESS_NO = #{messCode}
	</update>
	
	<insert id="insertAlarmR" parameterType="_int">
		INSERT 
		INTO ALARM
		(
			AL_MADE_CODE
	      , AL_CONTENT
	      , AL_TIME
	      , AL_STATUS
	      , AL_CODE
	      , ID
	      , REF_ID
		)
		VALUES
		(
		    SEQ_ALARM.NEXTVAL
		  , '쪽지 신고가 들어왔습니다'
		  , SYSDATE
		  , DEFAULT
		  , 15
		  , 'admin'
		  , #{ref_id}
		)
	</insert>
	
	<!-- 총 메일 갯수 카운트 -->
	<select id="selectMailCount" resultType="_int" parameterType="String">
		SELECT
		     COUNT(*)
		FROM
		     MESSAGE
		WHERE
		     U_ID_RECEIVE = #{id}
		AND
		    MESS_READ = 'N'
		AND
		    MESS_STATUS = 'Y'
	</select>
	
	<!-- 친구 정보 select -->
	<select id="selectFriendInfo" resultMap="friendCollResultSet">
		SELECT 
		      F.FR_CODE
		    , F.U_ID_SEND
		    , F.U_ID_RECEIVE
		    , F.FR_STATUS
		    , U.UP_CODE
		    , U.UP_ROOT
		    , U.UP_CL_NAME
		    , U.UP_SV_NAME
		    , U.UP_STATUS
		    , U.U_ID
		FROM FRIEND F
		JOIN USER_PROFILE U ON (U.U_ID = F.U_ID_SEND)
		WHERE 
		     (F.U_ID_RECEIVE = #{frRecId}
		     OR F.U_ID_SEND = #{frSend})
		AND  F.FR_STATUS = 2
		AND  (U.U_ID = F.U_ID_SEND OR U.U_ID = F.U_ID_RECEIVE)
		AND U.U_ID NOT IN (#{id})
	UNION
		SELECT 
		      F.FR_CODE
		    , F.U_ID_SEND
		    , F.U_ID_RECEIVE
		    , F.FR_STATUS
		    , U.UP_CODE
		    , U.UP_ROOT
		    , U.UP_CL_NAME
		    , U.UP_SV_NAME
		    , U.UP_STATUS
		    , U.U_ID
		FROM FRIEND F
		JOIN USER_PROFILE U ON (U.U_ID = F.U_ID_RECEIVE)
		WHERE 
		     (F.U_ID_RECEIVE = #{frRecId}
		     OR F.U_ID_SEND = #{frSend})
		AND  F.FR_STATUS = 2
		AND  (U.U_ID = F.U_ID_SEND OR U.U_ID = F.U_ID_RECEIVE)
		AND U.U_ID NOT IN (#{id})
	</select>
	
	<!-- 친구에게 받은 편지 select -->
	<select id="selectFriendMsg" resultMap="friendCollResultSet">
		SELECT
		      M.MESS_NO
		    , M.MESS_CONTENT
		    , M.MESS_DATE
		    , M.MESS_READ
		    , M.U_ID_SEND
		    , M.U_ID_RECEIVE
		    , M.MESS_TITLE
		    , M.MESS_STATUS
		    , F.FR_CODE
		    , F.U_ID_SEND
		    , F.U_ID_RECEIVE
		    , F.FR_STATUS
		FROM MESSAGE M
		JOIN FRIEND F ON (F.U_ID_SEND = M.U_ID_RECEIVE)
		WHERE 
		     ((F.U_ID_RECEIVE = #{frRecId} AND M.U_ID_RECEIVE = #{id}) OR (F.U_ID_SEND = #{frSend} AND M.U_ID_RECEIVE = #{id}))
		AND F.FR_STATUS = 2
		AND MESS_STATUS = 'Y'
		AND (F.U_ID_SEND = M.U_ID_SEND OR F.U_ID_RECEIVE = M.U_ID_SEND)
	UNION
		SELECT
		      M.MESS_NO
		    , M.MESS_CONTENT
		    , M.MESS_DATE
		    , M.MESS_READ
		    , M.U_ID_SEND
		    , M.U_ID_RECEIVE
		    , M.MESS_TITLE
		    , M.MESS_STATUS
		    , F.FR_CODE
		    , F.U_ID_SEND
		    , F.U_ID_RECEIVE
		    , F.FR_STATUS
		FROM MESSAGE M
		JOIN FRIEND F ON (F.U_ID_RECEIVE = M.U_ID_RECEIVE)
		WHERE 
		     ((F.U_ID_RECEIVE = #{frRecId} AND M.U_ID_RECEIVE = #{id}) OR (F.U_ID_SEND = #{frSend} AND M.U_ID_RECEIVE = #{id}))
		AND   F.FR_STATUS = 2
		AND MESS_STATUS = 'Y'
		AND (F.U_ID_SEND = M.U_ID_SEND OR F.U_ID_RECEIVE = M.U_ID_SEND)
	</select>
	
</mapper>