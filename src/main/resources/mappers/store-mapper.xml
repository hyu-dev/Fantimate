<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapepr 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="storeMapper">
	<resultMap type="StoreCategory" id="category">
		<id property="cateCode" column="C_CODE"/>
		<result property="cateName" column="C_NAME"/>
		<result property="artiNameEn" column="ARTI_NAME_EN"/>
	</resultMap>
	<resultMap type="Store" id="storeResultSet">
		<id property="pcode" column="P_CODE"/>
		<result property="pname" column="P_NAME"/>
		<result property="salesQ" column="SALES_Q"/>
		<result property="qprice" column="Q_PRICE"/>
		<result property="discount" column="DISCOUNT"/>
		<result property="info" column="INFORMATION"/>
		<result property="isView" column="IS_VIEW"/>
		<result property="viewCount" column="VIEWCOUNT"/>
		<result property="isSoldout" column="IS_SOLDOUT"/>
		<result property="isActive" column="IS_ACTIVE"/>
		<result property="cateCode" column="C_CODE"/>
	</resultMap>
	<resultMap type="Wish" id="wishResultSet">
		<id property="code" column="P_CODE"/>
		<result property="wishDate" column="WISH_DATE"/>
		<result property="isWish" column="IS_WISH"/>
		<result property="id" column="ID"/>
	</resultMap>
	<resultMap type="StoreInfo" id="storInfoResultSet">
		<id property="pcode" column="P_CODE"/>
		<result property="origin" column="ORIGIN"/>
		<result property="brand" column="BRAND"/>
		<result property="contact" column="CONTACT"/>
		<result property="useTerm" column="USE_TERM"/>
		<result property="offerings" column="OFFERINGS"/>
		<result property="cancelInfo" column="CANCEL_INFO"/>
	</resultMap>
	<resultMap type="Review" id="reviewResultSet">
		<id property="rvCode" column="RV_CODE"/>
		<result property="rvScore" column="RV_SCORE"/>
		<result property="rvTitle" column="RV_TITLE"/>
		<result property="rvContent" column="RV_CONTENT"/>
		<result property="id" column="ID"/>
		<result property="cartCode" column="CART_CODE"/>
		<result property="pcode" column="P_CODE"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
	</resultMap>
	<resultMap type="User" id="userResultSet">
		<id property="id" column="U_ID"/>
		<result property="uaddress" column="U_ADD"/>
		<result property="uemail" column="U_EMAIL"/>
		<result property="ucountry" column="U_COUNTRY"/>
		<result property="areaReg" column="AREA_REGISTER"/>
		<result property="areaCertify" column="AREA_CERTIFY"/>
		<result property="areaCode" column="AREA_CODE"/>
		<result property="isMembership" column="IS_MEMBERSHIP"/>
		<result property="uPaidStart" column="U_PAID_START"/>
		<result property="uPaidEnd" column="U_PAID_END"/>
		<result property="uSuspendStart" column="U_SUSPEND_START"/>
		<result property="uSuspendEnd" column="U_SUSPEND_END"/>
		<result property="uProfile" column="U_PROFILE"/>
	</resultMap>
	<resultMap type="Attachment" id="attResultSet">
		<id property="attCode" column="ATT_CODE"/>
		<result property="attRoot" column="ATT_ROOT"/>
		<result property="attClName" column="ATT_CL_NAME"/>
		<result property="attSvName" column="ATT_SV_NAME"/>
		<result property="attStatus" column="ATT_STATUS"/>
		<result property="attMain" column="IS_MAIN_ATT"/>
		<result property="refId" column="P_CODE"/>
	</resultMap>
	<resultMap type="Attachment" id="attUserResultSet">
		<id property="attCode" column="UP_CODE"/>
		<result property="attRoot" column="UP_ROOT"/>
		<result property="attClName" column="UP_CL_NAME"/>
		<result property="attSvName" column="UP_SV_NAME"/>
		<result property="attStatus" column="UP_STATUS"/>
		<result property="id" column="U_ID"/>
	</resultMap>
	<resultMap type="Payment" id="paymentResultSet">
		<id property="payCode" column="PAY_CODE"/>
		<result property="payMethod" column="PAY_METHOD"/>
		<result property="payStatus" column="PAY_STATUS"/>
		<result property="payPrice" column="PAY_PRICE"/>
		<result property="payDate" column="PAY_DATE"/>
		<result property="id" column="ID"/>
		<result property="payDivision" column="PAY_DIVISION"/>
		<result property="payPlan" column="PAY_PLAN"/>
	</resultMap>
	<resultMap type="Attachment" id="attReviewResultSet">
		<id property="attCode" column="R_ATT_CODE"/>
		<result property="attRoot" column="R_ATT_ROOT"/>
		<result property="attClName" column="R_ATT_CL_NAME"/>
		<result property="attSvName" column="R_ATT_SV_NAME"/>
		<result property="attStatus" column="R_ATT_STATUS"/>
		<result property="attMain" column="R_IS_MAIN_ATT"/>
		<result property="refId" column="RV_CODE"/>
	</resultMap>
	<resultMap type="Cart" id="cartResultSet">
		<id property="cartCode" column="CART_CODE"/>
		<result property="buyQ" column="BUY_Q"/>
		<result property="buyPrice" column="B_PRICE"/>
		<result property="fee" column="FEE"/>
		<result property="enrollDate" column="ENROLL_DATE"/>
		<result property="isBought" column="IS_BOUGHT"/>
		<result property="boughtDate" column="BOUGHT_DATE"/>
		<result property="pcode" column="P_CODE"/>
		<result property="mediaNum" column="MEDIA_NUM"/>
		<result property="id" column="ID"/>
	</resultMap>
	<resultMap type="StoreCollection" id="storeCollResultSet">
		<collection property="storeCate" resultMap="category" />
		<collection property="store" resultMap="storeResultSet" />
		<collection property="att"  resultMap="attResultSet" />
		<collection property="wish"  resultMap="wishResultSet" />
		<collection property="storeInfo" resultMap="storInfoResultSet" />
		<collection property="review" resultMap="reviewResultSet" />
		<collection property="attReview" resultMap="attReviewResultSet" />
	</resultMap>
	<resultMap type="ReviewCollection" id="reviewCollResultSet">
		<collection property="review" resultMap="reviewResultSet" />
		<collection property="attReview"  resultMap="attResultSet" />
		<collection property="user"  resultMap="userResultSet" />
		<collection property="attUser" resultMap="attUserResultSet" />
	</resultMap>
	<resultMap type="BuyCollection" id="buyCollResultSet">
		<collection property="store" resultMap="storeResultSet" />
		<collection property="att"  resultMap="attResultSet" />
		<collection property="storeCate" resultMap="category" />
		<collection property="review" resultMap="reviewResultSet" />
		<collection property="cart" resultMap="cartResultSet" />
		<collection property="payment" resultMap="paymentResultSet" />
	</resultMap>
	<select id="selectCategoryList" parameterType="string" resultMap="category">
		SELECT
				DISTINCT C_NAME
			  , ARTI_NAME_EN
		  FROM
		  		S_CATEGORY
		 WHERE
		 		ARTI_NAME_EN = #{arti}
	  ORDER BY  C_NAME ASC
	</select>
	<select id="selectStoreList" parameterType="hashMap" resultMap="storeCollResultSet">
		SELECT 
				P_CODE
			  , P_NAME
			  , SALES_Q
			  , Q_PRICE
			  , DISCOUNT
			  , INFORMATION
			  , IS_VIEW
			  , VIEWCOUNT
			  , IS_SOLDOUT
			  , IS_ACTIVE
			  , C_CODE
			  , ATT_CODE
			  , ATT_ROOT
			  , ATT_CL_NAME
			  , ATT_SV_NAME
			  , ATT_STATUS
			  , IS_MAIN_ATT
		  FROM 
		  		STORE
		  JOIN 
		  		ATT_STORE USING(P_CODE)
		  LEFT JOIN
		  		S_CATEGORY USING(C_CODE)
		 WHERE
		 		C_NAME = #{cateName}
		   AND	IS_MAIN_ATT = 'Y'
		   AND  IS_ACTIVE = 'Y'
		   AND  ARTI_NAME_EN = #{artiName}
	  ORDER BY  P_CODE DESC
	</select>
	<select id="selectStoreListByCate" parameterType="hashMap" resultMap="storeCollResultSet">
		SELECT
				P_CODE
			  , P_NAME
			  , SALES_Q
			  , Q_PRICE
			  , DISCOUNT
			  , INFORMATION
			  , IS_VIEW
			  , VIEWCOUNT
			  , IS_SOLDOUT
			  , IS_ACTIVE
			  , C_CODE
			  , ATT_CODE
			  , ATT_ROOT
			  , ATT_CL_NAME
			  , ATT_SV_NAME
			  , ATT_STATUS
			  , IS_MAIN_ATT
		  FROM 
		  		STORE
		  JOIN 
		  		ATT_STORE USING(P_CODE)
	  <trim prefix="WHERE" prefixOverrides="AND|OR">
		 		C_CODE IN (SELECT C_CODE FROM S_CATEGORY WHERE C_NAME = #{cateName} AND ARTI_NAME_EN = #{artiName})
		   AND	IS_MAIN_ATT = 'Y'
		   AND  IS_ACTIVE = 'Y'
	  <if test='toggle.equals("NEW")'>
	  ORDER BY  P_CODE DESC
	  </if>
	  <if test='toggle.equals("TOP")'>
	  ORDER BY  VIEWCOUNT DESC
	  </if>
	  </trim>
	</select>
	<select id="isEnrollWish" parameterType="Wish" resultType="_int">
		SELECT
				COUNT(*)
		  FROM
		  		S_WISH
		 WHERE
		 		ID = #{id}
		   AND
		   		P_CODE = #{code}
	</select>
	<insert id="enrollWish" parameterType="Wish">
		INSERT
		INTO S_WISH
		(
			P_CODE
		  , WISH_DATE
		  , IS_WISH
		  , ID
		)
		VALUES
		(
			#{code}
		  , SYSDATE
		  , DEFAULT
		  , #{id}
		)
	</insert>
	<update id="updateWish" parameterType="Wish">
		UPDATE
				S_WISH
		   SET
		   		IS_WISH = 'Y'
		 WHERE
		 		P_CODE = #{code}
		   AND
		   		ID = #{id}
	</update>
	<update id="cancelWish" parameterType="Wish">
		UPDATE
				S_WISH
		   SET
		   		IS_WISH = 'N'
		 WHERE
		 		P_CODE = #{code}
		   AND
		   		ID = #{id}
	</update>
	<select id="searchStoreList" parameterType="hashMap" resultMap="storeCollResultSet">
		SELECT
				P_CODE
			  , P_NAME
			  , SALES_Q
			  , Q_PRICE
			  , DISCOUNT
			  , INFORMATION
			  , IS_VIEW
			  , VIEWCOUNT
			  , IS_SOLDOUT
			  , IS_ACTIVE
			  , C_CODE
			  , ATT_CODE
			  , ATT_ROOT
			  , ATT_CL_NAME
			  , ATT_SV_NAME
			  , ATT_STATUS
			  , IS_MAIN_ATT
		  FROM 
		  		STORE
		  JOIN 
		  		ATT_STORE USING(P_CODE)
	  <trim prefix="WHERE" prefixOverrides="AND|OR">
		 		C_CODE IN (SELECT C_CODE FROM S_CATEGORY WHERE C_NAME = #{cateName} AND ARTI_NAME_EN = #{artiName})
		   AND	IS_MAIN_ATT = 'Y'
		   AND  IS_ACTIVE = 'Y'
		   AND	P_NAME LIKE '%' || #{search} || '%'
	  <if test='toggle.equals("NEW")'>
	  ORDER BY  P_CODE DESC
	  </if>
	  <if test='toggle.equals("TOP")'>
	  ORDER BY  VIEWCOUNT DESC
	  </if>
	  </trim>
	</select>
	<select id="searchPrice" parameterType="_int" resultType="string">
		SELECT
				Q_PRICE
		  FROM
		  		STORE
		 WHERE
		 		P_CODE = #{pcode}
	</select>
	<select id="isEnrollCart" parameterType="Cart" resultType="_int">
		SELECT
				COUNT(*)
		  FROM
		  		CART
		 WHERE
		 		ID = #{id}
		   AND  P_CODE = #{pcode}
		   AND  IS_BOUGHT = 'N'
	</select>
	<insert id="insertCart" parameterType="Cart">
		INSERT
		INTO CART
		(
			CART_CODE
		  , BUY_Q
		  , B_PRICE
		  , FEE
		  , ENROLL_DATE
		  , IS_BOUGHT
		  , BOUGHT_DATE
		  , P_CODE
		  , ID
		)
		VALUES
		(
			SEQ_CART.NEXTVAL
		  , #{buyQ}
		  , #{buyPrice}
		  , DEFAULT
		  , SYSDATE
		  , DEFAULT
		  , SYSDATE
		  , #{pcode}
		  , #{id}
		)
	</insert>
	<update id="updateCart" parameterType="Cart">
		UPDATE
				CART
		   SET
		   		BUY_Q = BUY_Q + #{buyQ}
		   	  , B_PRICE = B_PRICE + #{buyPrice}
		   	  , ENROLL_DATE = SYSDATE
		 WHERE
		 		ID = #{id}
		   AND  P_CODE = #{pcode}
	</update>
	<insert id="insertStoreCategory" parameterType="StoreCollection">
		INSERT
		INTO S_CATEGORY
		(
			C_CODE
		  , C_NAME
		  , ARTI_NAME_EN
		)
		VALUES
		(
			SEQ_S_CATE.NEXTVAL
		  , #{storeCate.cateName}
		  , #{storeCate.artiNameEn}
		)
	</insert>
	<insert id="insertStore" parameterType="StoreCollection">
		INSERT
		INTO STORE
		(
			P_CODE
		  , P_NAME
		  , SALES_Q
		  , Q_PRICE
		  , DISCOUNT
		  , INFORMATION
		  , IS_VIEW
		  , VIEWCOUNT
		  , IS_SOLDOUT
		  , IS_ACTIVE
		  , C_CODE
		)
		VALUES
		(
			SEQ_STORE.NEXTVAL
		  , #{store.pname}
		  , #{store.salesQ}
		  , #{store.qprice}
		  , #{store.discount}
		  , #{store.info}
		  , #{store.isView}
		  , DEFAULT
		  , DEFAULT
		  , DEFAULT
		  , SEQ_S_CATE.CURRVAL
		)
	</insert>
	<insert id="insertStoreInfo" parameterType="StoreCollection">
		INSERT
		INTO P_INFO
		(
			P_CODE
		  , ORIGIN
		  , BRAND
		  , CONTACT
		  , USE_TERM
		  , OFFERINGS
		  , CANCEL_INFO
		)
		VALUES
		(
			SEQ_STORE.CURRVAL
		  , #{storeInfo.origin}
		  , #{storeInfo.brand}
		  , #{storeInfo.contact}
		  , #{storeInfo.useTerm}
		  , #{storeInfo.offerings}
		  , #{storeInfo.cancelInfo}
		)
	</insert>
	<insert id="insertStoreAtt" parameterType="list">
		INSERT
		INTO ATT_STORE
		(
			ATT_CODE
		  , P_CODE
		  , ATT_CL_NAME
		  , ATT_SV_NAME
		  , ATT_STATUS
		  , IS_MAIN_ATT
		)
		SELECT SEQ_ATT_STORE.NEXTVAL, SEQ_STORE.CURRVAL, A.*
		FROM
		(
		  <foreach collection="list" item="i" separator="UNION ALL">
		  SELECT #{i.attClName} AS ATT_CL_NAME
			   , #{i.attSvName} AS ATT_SV_NAME
			   , #{i.attStatus} AS ATT_STATUS
			   , #{i.attMain} AS IS_MAIN_ATT
		    FROM DUAL
		  </foreach>
		) A
	</insert>
	<select id="selectStore" parameterType="string" resultMap="storeCollResultSet">
		SELECT
				P_CODE
			  , P_NAME
			  , SALES_Q
			  , Q_PRICE
			  , DISCOUNT
			  , INFORMATION
			  , IS_VIEW
			  , VIEWCOUNT
			  , IS_SOLDOUT
			  , IS_ACTIVE
			  , C_CODE
			  , C_NAME
			  , ARTI_NAME_EN
			  , ATT_CODE
			  , ATT_ROOT
			  , ATT_CL_NAME
			  , ATT_SV_NAME
			  , ATT_STATUS
			  , IS_MAIN_ATT
              , ORIGIN
              , BRAND
              , CONTACT
              , USE_TERM
              , OFFERINGS
              , CANCEL_INFO
		  FROM 
		  		STORE
		  JOIN 
		  		ATT_STORE USING(P_CODE)
          LEFT JOIN
                P_INFO USING(P_CODE)
          LEFT JOIN
                S_CATEGORY USING(C_CODE)
        WHERE
                P_CODE = #{pcode}
		   AND  IS_ACTIVE = 'Y'
	  ORDER BY  IS_MAIN_ATT DESC
	</select>
	<update id="updateReadCount" parameterType="string">
		UPDATE
				STORE
		   SET
		   		VIEWCOUNT = VIEWCOUNT + 1
		 WHERE
		 		P_CODE = #{pcode}
	</update>
	<select id="selectWish" parameterType="Wish" resultMap="wishResultSet">
		SELECT
				P_CODE
			  , WISH_DATE
			  , IS_WISH
			  , ID
		  FROM
		  		S_WISH
		 WHERE
		 		ID = #{id}
		   AND	P_CODE = #{code}
	</select>
	<select id="selectWishList" parameterType="string" resultMap="wishResultSet">
		SELECT
				P_CODE
			  , WISH_DATE
			  , IS_WISH
			  , ID
		  FROM
		  		S_WISH
		 WHERE
		 		ID = #{id}
	</select>
	<select id="recommandStoreListByCate" parameterType="hashMap" resultMap="storeCollResultSet">
		SELECT
				P_CODE
			  , P_NAME
			  , SALES_Q
			  , Q_PRICE
			  , DISCOUNT
			  , INFORMATION
			  , IS_VIEW
			  , VIEWCOUNT
			  , IS_SOLDOUT
			  , IS_ACTIVE
			  , C_CODE
			  , ATT_CODE
			  , ATT_ROOT
			  , ATT_CL_NAME
			  , ATT_SV_NAME
			  , ATT_STATUS
			  , IS_MAIN_ATT
		  FROM 
		  		STORE
		  JOIN 
		  		ATT_STORE USING(P_CODE)
		 WHERE
		 		C_CODE IN (SELECT C_CODE FROM S_CATEGORY WHERE C_NAME = #{cateName} AND ARTI_NAME_EN = #{artiName})
		   AND	IS_MAIN_ATT = 'Y'
		   AND  IS_ACTIVE = 'Y'
		   AND  P_CODE != #{pcode}
	  ORDER BY  VIEWCOUNT DESC
	</select>
	<select id="selectReviewList" parameterType="string" resultMap="reviewCollResultSet">
		SELECT
				RV_CODE
              , RV_SCORE
              , RV_TITLE
              , RV_CONTENT
              , ID
              , P_CODE
              , CART_CODE
              , ENROLL_DATE
              , ATT_CODE
              , ATT_ROOT
              , ATT_CL_NAME
              , ATT_SV_NAME
              , IS_MAIN_ATT
              , U_ADD
              , U_EMAIL
              , IS_MEMBERSHIP
              , UP_CODE
              , UP_CL_NAME
              , UP_SV_NAME
              , UP_STATUS
		  FROM 
		  		REVIEW
          LEFT JOIN
                ATT_REVIEW USING (RV_CODE)
          LEFT JOIN
                USER_ ON (ID = U_ID)
          LEFT JOIN
                USER_PROFILE USING(U_ID)
	     WHERE  
	     		P_CODE = #{pcode}
	  ORDER BY  ENROLL_DATE DESC
	</select>
	<select id="selectReview" parameterType="_int" resultMap="reviewCollResultSet">
		SELECT
				RV_CODE
              , RV_SCORE
              , RV_TITLE
              , RV_CONTENT
              , ID
              , P_CODE
              , CART_CODE
              , ENROLL_DATE
              , ATT_CODE
              , ATT_ROOT
              , ATT_CL_NAME
              , ATT_SV_NAME
              , IS_MAIN_ATT
              , U_ADD
              , U_EMAIL
              , IS_MEMBERSHIP
              , UP_CODE
              , UP_CL_NAME
              , UP_SV_NAME
              , UP_STATUS
		  FROM 
		  		REVIEW
          LEFT JOIN
                ATT_REVIEW USING (RV_CODE)
          LEFT JOIN
                USER_ ON (ID = U_ID)
          LEFT JOIN
                USER_PROFILE USING(U_ID)
         WHERE  
	     		RV_CODE = #{rvCode}
	  ORDER BY  ATT_CODE ASC
	</select>
	<update id="updateStoreCategory" parameterType="StoreCollection">
		UPDATE
				S_CATEGORY
		   SET
		  		C_NAME = #{storeCate.cateName}
		 WHERE
		 		C_CODE = #{storeCate.cateCode}
	</update>
	<update id="updateStore" parameterType="StoreCollection">
		UPDATE
				STORE
		   SET
			    P_NAME = #{store.pname}
			  , SALES_Q = #{store.salesQ}
			  , Q_PRICE = #{store.qprice}
			  , DISCOUNT = #{store.discount}
			  , INFORMATION = #{store.info}
			  , IS_VIEW = #{store.isView}
			  , C_CODE = #{storeCate.cateCode}
		 WHERE
		 		P_CODE = #{store.pcode}
	</update>
	<update id="updateStoreInfo" parameterType="StoreCollection">
		UPDATE
				P_INFO
		   SET
			    ORIGIN = #{storeInfo.origin}
			  , BRAND = #{storeInfo.brand}
			  , CONTACT = #{storeInfo.contact}
			  , USE_TERM = #{storeInfo.useTerm}
			  , OFFERINGS = #{storeInfo.offerings}
			  , CANCEL_INFO = #{storeInfo.cancelInfo}
		 WHERE
		 		P_CODE = #{store.pcode}
	</update>
	<select id="selectAttCode" parameterType="_int" resultType="integer">
		SELECT
				ATT_CODE
		  FROM
		  		ATT_STORE
		 WHERE
		 		P_CODE = #{pcode}
	</select>
	<update id="updateStoreAtt">
		<foreach collection="list" item="i" open="BEGIN" close="; END;" separator=";">
		UPDATE
				ATT_STORE
		   SET
			  	ATT_CL_NAME = #{i.attClName}
			  , ATT_SV_NAME = #{i.attSvName}
			  , IS_MAIN_ATT = #{i.attMain}
		 WHERE
		 		ATT_CODE = #{i.attCode}
		</foreach>
	</update>
	<select id="selectCollectionStore" parameterType="string" resultMap="buyCollResultSet">
		SELECT
		        CART_CODE
		      , BUY_Q
		      , B_PRICE
		      , FEE
		      , C.ENROLL_DATE
		      , IS_BOUGHT
		      , P_CODE
		      , MEDIA_NUM
		      , C.ID
		      , BOUGHT_DATE
		      , PAY_CODE
		      , P_NAME
		      , SALES_Q
		      , Q_PRICE
		      , DISCOUNT
		      , INFORMATION
		      , IS_VIEW
		      , VIEWCOUNT
		      , IS_SOLDOUT
		      , IS_ACTIVE
		      , C_CODE
		      , C_NAME
		      , ARTI_NAME_EN
		      , ATT_CODE
		      , ATT_ROOT
		      , ATT_CL_NAME
		      , ATT_SV_NAME
		      , ATT_STATUS
		      , IS_MAIN_ATT
		      , RV_CODE
		      , RV_SCORE
		      , RV_TITLE
		      , RV_CONTENT
		      , R.ENROLL_DATE
              , PAY_STATUS
		  FROM
		        CART C
		  LEFT JOIN
		        REVIEW R USING(CART_CODE)
		  LEFT JOIN
		        STORE S ON(C.P_CODE = S.P_CODE)
		  LEFT JOIN
		        S_CATEGORY USING(C_CODE)
		  LEFT JOIN
		        ATT_STORE USING(P_CODE)
          LEFT JOIN
                PAYMENT USING(PAY_CODE)
		 WHERE  C.ID = #{userId}
		   AND  IS_MAIN_ATT = 'Y'
		   AND  PAY_STATUS != 3
	  ORDER BY  BOUGHT_DATE DESC
	</select>
	<select id="readStoreMain" parameterType="Cart" resultMap="buyCollResultSet">
		SELECT
				P_CODE
			  , P_NAME
			  , SALES_Q
			  , Q_PRICE
			  , DISCOUNT
			  , INFORMATION
			  , IS_VIEW
			  , VIEWCOUNT
			  , IS_SOLDOUT
			  , IS_ACTIVE
			  , C_CODE
			  , C_NAME
			  , ARTI_NAME_EN
			  , ATT_CODE
			  , ATT_ROOT
			  , ATT_CL_NAME
			  , ATT_SV_NAME
			  , ATT_STATUS
			  , IS_MAIN_ATT
			  , CART_CODE
		  FROM 
		  		STORE
		  JOIN 
		  		ATT_STORE USING(P_CODE)
          LEFT JOIN
                S_CATEGORY USING(C_CODE)
          LEFT JOIN
                CART C USING(P_CODE)
          LEFT JOIN
                PAYMENT USING(PAY_CODE)
        WHERE
                P_CODE = #{pcode}
           AND  CART_CODE = #{cartCode}
		   AND  IS_ACTIVE = 'Y'
           AND  IS_MAIN_ATT = 'Y'
	</select>
	<insert id="insertReview" parameterType="Review">
		INSERT
		INTO REVIEW
		(
			RV_CODE
		  , RV_SCORE
		  , RV_TITLE
		  , RV_CONTENT
		  , ID
		  , CART_CODE
		  , P_CODE
		  , ENROLL_DATE
		)
		VALUES
		(
			SEQ_REVIEW.NEXTVAL
		  , #{rvScore}
		  , #{rvTitle}
		  , #{rvContent}
		  , #{id}
		  , #{cartCode}
		  , #{pcode}
		  , SYSDATE
		)
	</insert>
	<insert id="insertReviewAtt" parameterType="list">
		INSERT
		INTO ATT_REVIEW
		(
			ATT_CODE
		  , RV_CODE
		  , ATT_CL_NAME
		  , ATT_SV_NAME
		  , ATT_STATUS
		  , IS_MAIN_ATT
		)
		SELECT SEQ_ATT_REVIEW.NEXTVAL, SEQ_REVIEW.CURRVAL, A.*
		FROM
		(
		  <foreach collection="list" item="i" separator="UNION ALL">
		  SELECT #{i.attClName} AS ATT_CL_NAME
			   , #{i.attSvName} AS ATT_SV_NAME
			   , #{i.attStatus} AS ATT_STATUS
			   , #{i.attMain} AS IS_MAIN_ATT
		    FROM DUAL
		  </foreach>
		) A
	</insert>
	<select id="selectOneReview" parameterType="Review" resultMap="storeCollResultSet">
		SELECT
				RV_CODE
			  , RV_SCORE
			  , RV_TITLE
			  , RV_CONTENT
			  , ID
			  , CART_CODE
			  , P_CODE
			  , ENROLL_DATE
			  , RATT.ATT_CODE AS R_ATT_CODE
			  , RATT.ATT_CL_NAME AS R_ATT_CL_NAME
			  , RATT.ATT_SV_NAME AS R_ATT_SV_NAME
			  , RATT.ATT_STATUS AS R_ATT_STATUS
			  , RATT.IS_MAIN_ATT AS R_IS_MAIN_ATT
			  , P_NAME
			  , SALES_Q
			  , Q_PRICE
			  , DISCOUNT
			  , INFORMATION
			  , IS_VIEW
			  , VIEWCOUNT
			  , IS_SOLDOUT
			  , IS_ACTIVE
			  , C_CODE
			  , C_NAME
			  , ARTI_NAME_EN
			  , SATT.ATT_CODE
			  , SATT.ATT_CL_NAME
			  , SATT.ATT_SV_NAME
			  , SATT.ATT_STATUS
			  , SATT.IS_MAIN_ATT
		  FROM
		  		REVIEW R
		  LEFT JOIN
		  		ATT_REVIEW RATT USING(RV_CODE)
		  LEFT JOIN
		  		STORE S USING(P_CODE)
		  LEFT JOIN
		  		ATT_STORE SATT USING(P_CODE)
		  LEFT JOIN
		  		S_CATEGORY USING(C_CODE)
		 WHERE
		 		CART_CODE = #{cartCode}
		   AND  P_CODE = #{pcode}
		   AND  ID = #{id}
           AND  SATT.IS_MAIN_ATT = 'Y'
	</select>
</mapper>